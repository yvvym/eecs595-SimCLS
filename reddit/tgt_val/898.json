{"article": ["so i'm going to tell you you're wrong on the destructible environments, only because i know what kinds of environments you're referring to and what the other guy wants;   destructible environments in games like red faction and battlefield aren't \"random\"  debris, the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break.", "what the poster was asking for is a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to cars to water ripples."], "abstract": ["he asked for a way to make unscripted, dynamically broken, real-time debris and damage; battlefield and red faction don't do this"], "candidates": [[["destructible environments in games like red faction and battlefield aren't \"random\"  debris.", "the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego"], 0.14014336917562728], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to cars"], 0.2032828282828283], [["red faction and battlefield aren't \"random\" debris, the building is set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.13151801426322127], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to"], 0.20643060643060643], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way"], 0.19892473118279566], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything."], 0.22349813928761297], [["\"destructible environments in games like red faction and battlefield aren't \"random\"  debris,\" says the poster.", "\"the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the"], 0.1472891267717316], [["the engine is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break.", "what the poster was asking for is a way for the engine"], 0.11174242424242424], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything."], 0.22349813928761297], [["destructible environments in games like red faction and battlefield aren't \"random\" debris, the building is set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set"], 0.12939068100358422], [["red faction and battlefield's destructible environments are set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.10385878489326765], [["destructible environments are set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.02515723270440252], [["the game engine in battlefield and red faction uses a similar algorithm.", "the engine recognizes what the closest part of a lego set is that should fall/break.", "from trees to dirt, all the way to cars to water ripples."], 0.19186399514268362], [["a poster on reddit asked if the engine could recognize polygons that clash together.", "the engine could then dynamically produce broken anything, he said.", "the poster was referring to games like red faction and battlefield."], 0.19581280788177338], [["the game engine in battlefield and red faction uses a similar algorithm.", "the engine recognizes what the closest part of a lego set is that should fall/break."], 0.17153528077897826], [["a poster on reddit asked if the engine could recognize polygons that clash together.", "the engine could then dynamically produce broken anything, he said."], 0.11347517730496454]], "article_untok": ["so i'm going to tell you you're wrong on the destructible environments, only because i know what kinds of environments you're referring to and what the other guy wants;   destructible environments in games like red faction and battlefield aren't \"random\"  debris, the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break.", "what the poster was asking for is a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to cars to water ripples."], "abstract_untok": ["he asked for a way to make unscripted, dynamically broken, real-time debris and damage; battlefield and red faction don't do this"], "candidates_untok": [[["destructible environments in games like red faction and battlefield aren't \"random\"  debris.", "the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego"], 0.14014336917562728], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to cars"], 0.2032828282828283], [["red faction and battlefield aren't \"random\" debris, the building is set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.13151801426322127], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way to"], 0.20643060643060643], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything.", "from trees to dirt, all the way"], 0.19892473118279566], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything."], 0.22349813928761297], [["\"destructible environments in games like red faction and battlefield aren't \"random\"  debris,\" says the poster.", "\"the building is set up like legos and when a part of it is \"smashed\" the engine recognizes what the"], 0.1472891267717316], [["the engine is set up like legos and when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break.", "what the poster was asking for is a way for the engine"], 0.11174242424242424], [["the poster was asking for a way for the engine to recognize the polygons that clash together, use an algorithm to determine which pieces and clumps should break, and then dynamically produce broken anything."], 0.22349813928761297], [["destructible environments in games like red faction and battlefield aren't \"random\" debris, the building is set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set"], 0.12939068100358422], [["red faction and battlefield's destructible environments are set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.10385878489326765], [["destructible environments are set up like legos.", "when a part of it is \"smashed\" the engine recognizes what the closest part is in that lego set that should fall/break."], 0.02515723270440252], [["the game engine in battlefield and red faction uses a similar algorithm.", "the engine recognizes what the closest part of a lego set is that should fall/break.", "from trees to dirt, all the way to cars to water ripples."], 0.19186399514268362], [["a poster on reddit asked if the engine could recognize polygons that clash together.", "the engine could then dynamically produce broken anything, he said.", "the poster was referring to games like red faction and battlefield."], 0.19581280788177338], [["the game engine in battlefield and red faction uses a similar algorithm.", "the engine recognizes what the closest part of a lego set is that should fall/break."], 0.17153528077897826], [["a poster on reddit asked if the engine could recognize polygons that clash together.", "the engine could then dynamically produce broken anything, he said."], 0.11347517730496454]]}